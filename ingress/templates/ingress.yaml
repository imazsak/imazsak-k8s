apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: ingress
    annotations:
        certmanager.k8s.io/acme-challenge-type: http01
        certmanager.k8s.io/cluster-issuer: "letsencrypt-cluster"
        ingress.kubernetes.io/ssl-redirect: "true"
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
spec:
    rules:
        - host: "{{ .Values.domain }}"
          http:
              paths:
                  - path: /
                    backend:
                        serviceName: web-client
                        servicePort: 80
        - host: "{{ .Values.rabbitmq_domain }}"
          http:
              paths:
                  - path: /
                    backend:
                        serviceName: rabbitmq
                        servicePort: 15672
    tls:
        - hosts:
              - "{{ .Values.domain }}"
              - "{{ .Values.rabbitmq_domain }}"
          secretName: imazsak-domain-tls-secret
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: ingress-rewrite
    annotations:
        certmanager.k8s.io/acme-challenge-type: http01
        certmanager.k8s.io/cluster-issuer: "letsencrypt-cluster"
        ingress.kubernetes.io/ssl-redirect: "true"
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
    rules:
        - host: "{{ .Values.domain }}"
          http:
              paths:
                  - path: /admin(/|$)(.*)
                    backend:
                        serviceName: admin-client
                        servicePort: 80
        - host: "{{ .Values.domain }}"
          http:
              paths:
                  - path: /auth(/|$)(.*)
                    backend:
                        serviceName: tutelar
                        servicePort: 9000
    tls:
        - hosts:
              - "{{ .Values.domain }}"
          secretName: imazsak-domain-tls-secret
